/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package rec.confidential.message.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.ShardedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Confidential_Messages service. Represents a row in the &quot;confidential_messages&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>rec.confidential.message.model.impl.Confidential_MessagesModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>rec.confidential.message.model.impl.Confidential_MessagesImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Confidential_Messages
 * @generated
 */
@ProviderType
public interface Confidential_MessagesModel
	extends BaseModel<Confidential_Messages>, ShardedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a confidential_ messages model instance should use the {@link Confidential_Messages} interface instead.
	 */

	/**
	 * Returns the primary key of this confidential_ messages.
	 *
	 * @return the primary key of this confidential_ messages
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this confidential_ messages.
	 *
	 * @param primaryKey the primary key of this confidential_ messages
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this confidential_ messages.
	 *
	 * @return the uuid of this confidential_ messages
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this confidential_ messages.
	 *
	 * @param uuid the uuid of this confidential_ messages
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the message ID of this confidential_ messages.
	 *
	 * @return the message ID of this confidential_ messages
	 */
	public long getMessageId();

	/**
	 * Sets the message ID of this confidential_ messages.
	 *
	 * @param messageId the message ID of this confidential_ messages
	 */
	public void setMessageId(long messageId);

	/**
	 * Returns the company ID of this confidential_ messages.
	 *
	 * @return the company ID of this confidential_ messages
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this confidential_ messages.
	 *
	 * @param companyId the company ID of this confidential_ messages
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the create date of this confidential_ messages.
	 *
	 * @return the create date of this confidential_ messages
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this confidential_ messages.
	 *
	 * @param createDate the create date of this confidential_ messages
	 */
	public void setCreateDate(Date createDate);

}