<%--
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%
	JSONObject jsonObject = JSONFactoryUtil.createJSONObject(userNotificationEvent.getPayload());

	String customNotificationBody = null;

	String customNotificationTitle = null;

	boolean anonymous = jsonObject.getBoolean("anonymous");

	long userNotificationEventUserId = jsonObject.getLong("userId");

	boolean notificationUnread = !actionRequired && !userNotificationEvent.isArchived()
			&& (userNotificationFeedEntry != null) && userNotificationFeedEntry.isApplicable();

	if (notificationUnread) {
		row.setCssClass("list-group-item-primary");
	}

	if (userNotificationEvent.getType().matches("com_everis_notification.*")) {

		String link1 = null;
		String link2 = null;
		String userId = null;
		String userNotificationEventId = null;
		String functionMarkAsRead1 = null;
		String functionMarkAsRead2 = null;

		if (userNotificationEvent.getType().equals("com_everis_notification06_Notification06Portlet")) {

			if (jsonObject.has("entryURL")) {
				String customURLS = jsonObject.getString("entryURL");
				link1 = customURLS.split(";spc;")[0];
				link2 = customURLS.split(";spc;")[1];
			}

		} else {

			if (jsonObject.has("entryURL")) {
				link1 = jsonObject.getString("entryURL");
			}

		}

		if (jsonObject.has("localizedBodyMap")) {

			String customNotificationBodySplit = jsonObject.getString("localizedBodyMap");

			customNotificationBodySplit = customNotificationBodySplit.substring(2,
					customNotificationBodySplit.length() - 2);

			customNotificationBody = customNotificationBodySplit.split("\":\"")[1];

			customNotificationTitle = jsonObject.getString("entryTitle");

			customNotificationBody = customNotificationTitle + "</br>" + customNotificationBody;

			if (Validator.isNotNull(link1) && Validator.isNotNull(link2)) {

				userId = String.valueOf(themeDisplay.getUserId());
				userNotificationEventId = String.valueOf(userNotificationEvent.getUserNotificationEventId());

				functionMarkAsRead1 = "customMarkAsReadNotification(event,".concat(userId).concat(",")
						.concat(userNotificationEventId).concat(",").concat("'").concat(link1).concat("')");

				functionMarkAsRead2 = "customMarkAsReadNotification(event,".concat(userId).concat(",")
						.concat(userNotificationEventId).concat(",").concat("'").concat(link2).concat("')");

				customNotificationBody = customNotificationBody.replace("'@LINK1'", functionMarkAsRead1);
				customNotificationBody = customNotificationBody.replace("'@LINK2'", functionMarkAsRead2);

			} else if (Validator.isNotNull(link1) && Validator.isNull(link2)) {

				userId = String.valueOf(themeDisplay.getUserId());
				userNotificationEventId = String.valueOf(userNotificationEvent.getUserNotificationEventId());

				functionMarkAsRead1 = "customMarkAsReadNotification(event,".concat(userId).concat(",")
						.concat(userNotificationEventId).concat(",").concat("'").concat(link1).concat("')");
				customNotificationBody = customNotificationBody.replace("'@LINK1'", functionMarkAsRead1);
			}

		} else {
			customNotificationBody = userNotificationFeedEntry.getBody();
		}
	} else {
		customNotificationBody = userNotificationFeedEntry.getBody();
	}

%>

<c:choose>
	<c:when test="<%=!anonymous%>">
		<liferay-ui:search-container-column-user showDetails="<%=false%>"
			userId="<%=userNotificationEventUserId%>" />
	</c:when>
	<c:otherwise>
		<liferay-ui:search-container-column-text>
			<liferay-ui:user-portrait userId="<%=0%>" />
		</liferay-ui:search-container-column-text>
	</c:otherwise>
</c:choose>

<c:choose>
	<c:when test="<%=userNotificationFeedEntry == null%>">
		<liferay-ui:search-container-column-text colspan="<%=2%>">
			<liferay-ui:message key="notification-no-longer-applies" />
		</liferay-ui:search-container-column-text>
	</c:when>
	<c:otherwise>
		<c:choose>
			<c:when test="<%=!userNotificationFeedEntry.isApplicable()%>">
				<liferay-ui:search-container-column-text colspan="<%=2%>">
					<liferay-ui:message key="<%=userNotificationFeedEntry.getBody()%>" />
				</liferay-ui:search-container-column-text>
			</c:when>
			<c:otherwise>
				<portlet:actionURL name="markNotificationAsRead"
					var="markNotificationAsReadURL">
					<portlet:param name="userNotificationEventId"
						value="<%=String.valueOf(userNotificationEvent.getUserNotificationEventId())%>" />

					<c:choose>
						<c:when
							test="<%=Validator.isNotNull(userNotificationFeedEntry.getLink())%>">
							<portlet:param name="redirect"
								value="<%=PortalUtil.addPreservedParameters(themeDisplay,
												userNotificationFeedEntry.getLink(), false, true)%>" />
						</c:when>
						<c:otherwise>
							<portlet:param name="redirect" value="<%=currentURL%>" />
						</c:otherwise>
					</c:choose>
				</portlet:actionURL>

				<liferay-ui:search-container-column-text colspan="<%=2%>">
					<c:if test="<%=notificationUnread%>">
						<h4>
					</c:if>

					<div style="cursor: pointer;"
						onclick="markAsReadNotification('<%=markNotificationAsReadURL.toString()%>')"><%=customNotificationBody.replace("<\\/", "</")%>

					</div>

					<c:if test="<%=notificationUnread%>">
						</h4>
					</c:if>

					<h5 class="text-default">
						<span
							title="<%=dateFormatDateTime.format(userNotificationEvent.getTimestamp())%>">
							<%=Time.getRelativeTimeDescription(userNotificationEvent.getTimestamp(),
										themeDisplay.getLocale(), themeDisplay.getTimeZone(), dateFormatDateTime)%>
						</span>
					</h5>
				</liferay-ui:search-container-column-text>

				<liferay-ui:search-container-column-jsp
					path="/notifications/notification_action.jsp" />
			</c:otherwise>
		</c:choose>
	</c:otherwise>
</c:choose>